-- https://www.hackerrank.com/challenges/occupations/problem

-- Pivot table, reshaping from long to wide

-- this only works for two occupations, not scalable and very unwieldy; 
(select A.*, B.*
from 
(select @rownum:= @rownum + 1 as row_number, name Doctor
from occupations, (select @rownum:= 0) temp1
where occupation = "Doctor" 
order by 2) A 
left join 
(select @rownum1:= @rownum1 + 1 as row_number, name Actor
from occupations, (select @rownum1:= 0) temp
where occupation = "Actor" 
order by 2) B 
on A.row_number = B.row_number )
union 
(select C.*, D.*
from 
(select @rownum2:= @rownum2 + 1 as row_number, name Doctor
from occupations, (select @rownum2:= 0) temp1
where occupation = "Doctor" 
order by 2) C 
right join 
(select @rownum3:= @rownum3 + 1 as row_number, name Actor
from occupations, (select @rownum3:= 0) temp
where occupation = "Actor" 
order by 2) D
on C.row_number = D.row_number );



-- correct answer: separate row numbers for each occupation; 
-- use min/max() to take the first non-null value in each row-number group; 

set @r1=0, @r2=0, @r3=0, @r4=0;
select min(Doctor), min(Professor), min(Singer), min(Actor)
from(
  select case when Occupation='Doctor' then (@r1:=@r1+1)
            when Occupation='Professor' then (@r2:=@r2+1)
            when Occupation='Singer' then (@r3:=@r3+1)
            when Occupation='Actor' then (@r4:=@r4+1) end as RowNumber,
    case when Occupation='Doctor' then Name end as Doctor,
    case when Occupation='Professor' then Name end as Professor,
    case when Occupation='Singer' then Name end as Singer,
    case when Occupation='Actor' then Name end as Actor
  from OCCUPATIONS
  order by Name
) Temp
group by RowNumber;











